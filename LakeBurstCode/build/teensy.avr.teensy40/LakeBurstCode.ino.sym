
C:\Users\mason\AppData\Local\arduino\sketches\3B457678A0E2D8C6916A98DA0EC77E02/LakeBurstCode.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001c7c l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
000119c0 l    d  .fini	00000000 .fini
000119c4 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200042c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
60017b00 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	00000218 ResetHandler2
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 tempmon.c
20004b88 l     O .bss	00000004 s_hotCount
20004b8c l     O .bss	00000004 s_hotTemp
20004b90 l     O .bss	00000004 s_hot_ROOM
20004b94 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0000b584 l     F .text.itcm	00000088 schedule_transfer
0000b60c l     F .text.itcm	00000036 run_callbacks
0000b644 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
20004af8 l     O .bss	00000008 endpoint0_buffer
20004b00 l     O .bss	00000004 endpoint0_notify_mask
200044d8 l     O .bss	00000008 endpoint0_setupdata
20004b04 l     O .bss	00000004 endpointN_notify_mask
20004b50 l     O .bss	00000008 reply_buffer
20004bf4 l     O .bss	00000001 sof_usage
20004bfc l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
20004bf0 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20004b34 l     O .bss	00000000 object.0
60001c70 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 LakeBurstCode.ino.cpp
00000890 l     F .text.itcm	000000fc _GLOBAL__sub_I_bnowo
00000000 l    df *ABS*	00000000 SHC_BNO055.cpp
00000b50 l     F .text.itcm	00000034 _GLOBAL__sub_I_bno
00000000 l    df *ABS*	00000000 usb_desc.c
20003ce4 l     O .data	00000012 device_descriptor
20003cfc l     O .data	00000028 microsoft_os_compatible_id_desc
20003d24 l     O .data	00000012 microsoft_os_string_desc
60001e68 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 Adafruit_BNO055.cpp
00000000 l    df *ABS*	00000000 Adafruit_I2CDevice.cpp
00000000 l    df *ABS*	00000000 Adafruit_SPIDevice.cpp
00000000 l    df *ABS*	00000000 Utils.cpp
00000000 l    df *ABS*	00000000 SHC_BME280.cpp
00000000 l    df *ABS*	00000000 BME280.cpp
00001838 l     F .text.itcm	00000190 unsigned char& BME280_Class::putData<unsigned char>(unsigned char, unsigned char const&) [clone .isra.0]
000019c8 l     F .text.itcm	00000204 unsigned char& BME280_Class::getData<unsigned char>(unsigned char, unsigned char&) [clone .isra.0]
000023b8 l     F .text.itcm	00000208 unsigned char& BME280_Class::getData<short>(unsigned char, short&) [clone .isra.0]
000025c0 l     F .text.itcm	00000208 unsigned char& BME280_Class::getData<unsigned short>(unsigned char, unsigned short&) [clone .isra.0]
00000000 l    df *ABS*	00000000 SPI.cpp
00000000 l    df *ABS*	00000000 SHC_M9N.cpp
00000000 l    df *ABS*	00000000 SparkFun_u-blox_GNSS_Arduino_Library.cpp
00002e58 l     F .text.itcm	00000020 Print::write(char const*) [clone .isra.0]
00002e78 l     F .text.itcm	00000024 Print::println(__FlashStringHelper const*) [clone .isra.0]
000052b0 l     F .text.itcm	00000228 SFE_UBLOX_GNSS::sendSpiCommand(ubxPacket*) [clone .part.0]
00008b48 l     F .text.itcm	00000268 SFE_UBLOX_GNSS::checkUbloxI2C(ubxPacket*, unsigned char, unsigned char) [clone .part.0]
20004be4 l     O .bss	00000002 SFE_UBLOX_GNSS::processRTCMframe_v(unsigned char, unsigned short*)::rtcmLen
20001c28 l     O .data	000000c2 CSWTCH.376
20001cec l     O .data	00000028 CSWTCH.377
20001d14 l     O .data	00000006 CSWTCH.378
00000000 l    df *ABS*	00000000 Time.cpp
200046c8 l     O .bss	00000004 prevMillis
2000474c l     O .bss	00000004 nextSyncTime
20004bec l     O .bss	00000001 Status
20004750 l     O .bss	00000004 sysTime
20003748 l     O .data	00000004 syncInterval
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 HardwareSerial1.cpp
200046cc l     O .bss	00000040 rx_buffer1
2000470c l     O .bss	00000040 tx_buffer1
20001d2c l     O .data	00000060 UART6_Hardware
00000000 l    df *ABS*	00000000 Print.cpp
0000a374 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
20004bf1 l     O .bss	00000001 initialized
20004b9c l     O .bss	0000001e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
0000bef0 l     F .text.itcm	00000060 rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
0000bf50 l     F .text.itcm	000000b4 rx_event
0000c004 l     F .text.itcm	00000090 usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
0000c094 l     F .text.itcm	000001b8 usb_serial_write.part.0
20004b58 l     O .bss	00000004 rx_available
20004b5c l     O .bss	00000010 rx_count
20004bf2 l     O .bss	00000001 rx_head
20004b6c l     O .bss	00000010 rx_index
20004b7c l     O .bss	00000009 rx_list
20004be6 l     O .bss	00000002 rx_packet_size
20004bf3 l     O .bss	00000001 rx_tail
20004300 l     O .bss	00000100 rx_transfer
20004bf6 l     O .bss	00000001 transmit_previous_timeout
20004be8 l     O .bss	00000002 tx_available
20004bf7 l     O .bss	00000001 tx_head
20004bf8 l     O .bss	00000001 tx_noautoflush
20004bea l     O .bss	00000002 tx_packet_size
20004400 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
20004bef l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 libm_a-pow.o
00000000 l    df *ABS*	00000000 libm_a-math_err.o
0000ccbc l     F .text.itcm	00000018 with_errno
0000ccd4 l     F .text.itcm	00000022 xflow
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _aeabi_ldivmod.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-itoa.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-utoa.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0000dbb8 l     F .text.itcm	00000018 stdio_exit_handler
0000dbd0 l     F .text.itcm	00000040 cleanup_stdio
0000dc10 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
0000f2a8 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00010148 l     F .text.itcm	00000076 __sprint_r.part.0
0001114c l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libm_a-exp_data.o
00000000 l    df *ABS*	00000000 libm_a-pow_log_data.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
000119a8 l     F .text.itcm	00000008 ___init_veneer
000119b0 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
000119b8 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
60001c38 l     F .text.code	00000008 ____libc_init_array_veneer
60001c40 l     F .text.code	00000008 __set_arm_clock_veneer
60001c48 l     F .text.code	00000008 __main_veneer
60001c50 l     F .text.code	00000008 __delay_veneer
60001c58 l     F .text.code	00000008 __pwm_init_veneer
60001c60 l     F .text.code	00000008 __memset_veneer
60001c68 l     F .text.code	00000008 __usb_init_serialnumber_veneer
0000239c g     F .text.itcm	0000001c BME280_Class::getSensorData(long&, long&, long&)
0000c474 g     F .text.itcm	00000018 usb_serial_available
00000750 g     F .text.itcm	000000a4 stateSwitcher()
0000a654 g     F .text.itcm	00000036 String::String(float, unsigned char)
00011980 g     F .text.itcm	00000024 _isatty_r
00000670 g     F .text.itcm	0000003e stabilize()
0000e1a8 g     F .text.itcm	000000ba strcpy
0000a5f4 g     F .text.itcm	0000002c String::String(int, unsigned char)
0000a620 g     F .text.itcm	00000032 String::String(long long, unsigned char)
200044e0 g     O .bss	000001d0 miners
0000ad64 g     F .text.itcm	00000004 operator new[](unsigned int)
600017f4 g     F .text.code	00000002 startup_default_late_hook
0000e09c g     F .text.itcm	0000002c _lseek_r
0000c644  w    F .text.itcm	000000d8 yield
0000626c g     F .text.itcm	000000dc SFE_UBLOX_GNSS::storePacket(ubxPacket*)
20004bdc g     O .bss	00000004 usb_timer1_callback
00004f98  w    F .text.itcm	0000005c SFE_UBLOX_GNSS::processRTCMframe(unsigned char, unsigned short*)
60001d84 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
00004570 g     F .text.itcm	00000140 SFE_UBLOX_GNSS::getNMEAWorkingLengthPtr()
200034c8 g     O .data	00000140 Wire1
20004914 g     O .bss	00000001 __lock___atexit_recursive_mutex
000100bc g     F .text.itcm	0000004c _wcrtomb_r
000063c4 g     F .text.itcm	0000001c SFE_UBLOX_GNSS::extractLong(ubxPacket const*, unsigned short)
60001670 g     F .text.code	00000034 TwoWire::configSDApin(unsigned char)
0000a4a8 g     F .text.itcm	0000001c Print::println()
0000159c g     F .text.itcm	000000aa TwoWire::isr()
0000dde4 g     F .text.itcm	00000020 __sseek
0000dce4 g     F .text.itcm	0000003c __sinit
0000ee50 g     F .text.itcm	000000a4 fcvtbuf
000118a4 g     F .text.itcm	000000b0 __swbuf_r
0000d708 g     F .text.itcm	0000000c __malloc_unlock
0000ae50 g     F .text.itcm	00000028 lltoa
20004bee g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
60001bd4 g     F .text.code	00000054 analog_init
20000280 g     O .data	00000870 .hidden __exp_data
0000abd4 g     F .text.itcm	00000048 eeprom_initialize
00002e9c g     F .text.itcm	00000108 SFE_UBLOX_GNSS::SFE_UBLOX_GNSS()
00000f88 g     F .text.itcm	00000070 Adafruit_I2CDevice::_read(unsigned char*, unsigned int, bool)
0000cd18 g     F .text.itcm	00000030 .hidden __math_divzero
200032c4 g     O .data	00000004 F_CPU_ACTUAL
0000de6c g     F .text.itcm	000000f8 memmove
00006144 g     F .text.itcm	000000a4 SFE_UBLOX_GNSS::createFileBuffer()
20003d59  w    O .data	00000001 BME280_Class::putData<unsigned char>(unsigned char, unsigned char const&)::structSize
20004b14 g     O .bss	00000004 lasttime
0000e6bc g     F .text.itcm	0000004c _Balloc
000119cc g       .ARM.exidx	00000000 __exidx_end
20004bed g     O .bss	00000001 EventResponder::runningFromYield
00007e50 g     F .text.itcm	000004c4 SFE_UBLOX_GNSS::processUBX(unsigned char, ubxPacket*, unsigned char, unsigned char)
000054d8 g     F .text.itcm	000001b8 SFE_UBLOX_GNSS::printPacket(ubxPacket*, bool)
0000b524 g     F .text.itcm	00000060 tempmonGetTemp
0000a3f4 g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
2000374c g     O .data	00000004 __atexit_recursive_mutex
00005270 g     F .text.itcm	0000003e SFE_UBLOX_GNSS::spiTransfer(unsigned char)
0000e144 g     F .text.itcm	0000000c __errno
0000a214 g     F .text.itcm	0000014a HardwareSerialIMXRT::IRQHandler()
60001000 g     O .text.headers	00000020 ImageVectorTable
0000a654 g     F .text.itcm	00000036 String::String(float, unsigned char)
2000475c g     O .bss	00000004 EventResponder::firstInterrupt
0000be74 g     F .text.itcm	00000004 usb_transfer_status
200046b0 g     O .bss	00000008 mostRecentAltitude
000037ac g     F .text.itcm	00000040 SFE_UBLOX_GNSS::~SFE_UBLOX_GNSS()
20004764 g     O .bss	0000001c HardwareSerialIMXRT::s_serials_with_serial_events
20004a8c g     O .bss	00000004 __stdio_exit_handler
20003328 g     O .data	00000060 Serial1
0000a544 g     F .text.itcm	00000038 String::String(String const&)
0000bee8  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
00011954 g     F .text.itcm	0000002c _fstat_r
20002e18 g     O .data	00000280 digital_pin_to_info_PGM
00000b18 g     F .text.itcm	00000006 BNO055::getGyroY()
20004b08 g     O .bss	00000004 errno
60001ccc  w    O .text.progmem	00000050 TwoWire::i2c3_hardware
000119c8 g       .text.itcm	00000000 _etext
00002b9c g     F .text.itcm	000000dc _spi_dma_rxISR0()
200042c0 g       .bss	00000000 _sbss
00001804 g     F .text.itcm	00000006 SHC_BME280::getPressure()
0000ab40 g     F .text.itcm	00000024 digitalRead
60001e74 g       *ABS*	00000000 _stextload
000007f4 g     F .text.itcm	0000009c loop
0000b1c4 g     F .text.itcm	0000007a flexpwm_init
600017f8 g     F .text.code	00000004 startup_debug_reset
0000bd38 g     F .text.itcm	00000064 usb_config_rx
00002e24 g     F .text.itcm	00000006 M9N::getLatitude()
00004e18 g     F .text.itcm	0000012c SFE_UBLOX_GNSS::getNMEAFlagsPtr()
20004bbc g     O .bss	00000004 startup
0000133c g     F .text.itcm	00000100 TwoWire::endTransmission(unsigned char)
00004a70 g     F .text.itcm	0000014c SFE_UBLOX_GNSS::getNMEACallbackLengthPtr()
00000a68 g     F .text.itcm	00000018 BNO055::init()
20004758 g     O .bss	00000004 EventResponder::lastInterrupt
0000ac2c g     F .text.itcm	00000134 memcpy
20003d55  w    O .data	00000001 BME280_Class::getData<signed char>(unsigned char, signed char&)::structSize
200042c0 g     O .data	00000000 .hidden __TMC_END__
0000cd48 g     F .text.itcm	0000001e .hidden __math_invalid
00000b08 g     F .text.itcm	00000006 BNO055::getAccelerationZ()
20004bc4 g     O .bss	00000004 systick_millis_count
000012fc g     F .text.itcm	00000040 TwoWire::wait_idle()
0000a134 g     F .text.itcm	000000dc HardwareSerialIMXRT::write9bit(unsigned long)
00000080 g     F .text.itcm	000004ec dataString(int)
20003d57  w    O .data	00000001 BME280_Class::getData<short>(unsigned char, short&)::structSize
0000ce54 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
00009e58 g     F .text.itcm	0000029c HardwareSerialIMXRT::begin(unsigned long, unsigned short)
20004bfa g     O .bss	00000001 usb_configuration
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
00000ee8 g     F .text.itcm	00000036 Adafruit_I2CDevice::begin(bool)
00000d60 g     F .text.itcm	000000f8 Adafruit_BNO055::getVector(Adafruit_BNO055::adafruit_vector_type_t)
00001e08 g     F .text.itcm	0000004a BME280_Class::iirFilter(unsigned char)
20002b4c  w    O .data	00000010 vtable for Sensor
00003898 g     F .text.itcm	0000043c SFE_UBLOX_GNSS::checkAutomatic(unsigned char, unsigned char)
60001d84  w    O .text.progmem	00000018 usb_string_manufacturer_name
0000d17c g     F .text.itcm	00000010 malloc
20003d54  w    O .data	00000001 BME280_Class::getData<unsigned char [8]>(unsigned char, unsigned char (&) [8])::structSize
60001d1c  w    O .text.progmem	00000050 TwoWire::i2c1_hardware
0000b500  w    F .text.itcm	0000000a _fstat
00000eb4  w    F .text.itcm	0000001e TwoWire::read()
000016e4 g     F .text.itcm	00000010 Timer::Timer(unsigned long)
0000f1f0 g     F .text.itcm	00000040 __assert_func
00004250 g     F .text.itcm	00000138 SFE_UBLOX_GNSS::isThisNMEAauto()
00002b84  w    F .text.itcm	00000016 EventResponder::triggerEvent(int, void*)
20000b18 g     O .data	000000c8 __mprec_tens
60001a98 g     F .text.code	000000e8 usb_init
20004be0 g     O .bss	00000004 velocityEND
0000a5f4 g     F .text.itcm	0000002c String::String(int, unsigned char)
000037ac g     F .text.itcm	00000040 SFE_UBLOX_GNSS::~SFE_UBLOX_GNSS()
20004950 g     O .bss	00000004 __malloc_top_pad
20004bc8 g     O .bss	00000004 systick_safe_read
000011f4 g     F .text.itcm	00000108 TwoWire::force_clock()
aaaaaabf g       *ABS*	00000000 _flexram_bank_config
20003754 g     O .data	00000000 .hidden __dso_handle
0000d150 g     F .text.itcm	0000002c itoa
0000056c g     F .text.itcm	00000104 phaseControl()
00008db0 g     F .text.itcm	0000003e SFE_UBLOX_GNSS::checkUbloxSerial(ubxPacket*, unsigned char, unsigned char)
00000a64  w    F .text.itcm	00000002 Adafruit_BNO055::~Adafruit_BNO055()
0000f140 g     F .text.itcm	00000008 _localeconv_r
000111cc g     F .text.itcm	000002f4 __sfvwrite_r
0000e860 g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
60001e04 g     O .text.progmem	00000062 usb_config_descriptor_480
0000ce84 g     F .text.itcm	000002c8 .hidden __udivmoddi4
0000e0f4 g     F .text.itcm	00000024 _sbrk_r
00000ff8 g     F .text.itcm	00000056 Adafruit_I2CDevice::write_then_read(unsigned char const*, unsigned int, unsigned char*, unsigned int, bool)
600017ec g     F .text.code	00000002 startup_default_early_hook
60001648 g     F .text.code	00000028 ResetHandler
0000c4fc g     F .text.itcm	00000020 usb_serial_getchar
20004bcc g     O .bss	00000008 usb_cdc_line_coding
20004480 g     O .bss	00000058 bnowo
0000aaec g     F .text.itcm	00000054 digitalWrite
20004760 g     O .bss	00000004 EventResponder::lastYield
00006348 g     F .text.itcm	0000007c SFE_UBLOX_GNSS::storeFileBytes(unsigned char*, unsigned short)
0000e0c8 g     F .text.itcm	0000002c _read_r
0000eef4 g     F .text.itcm	000000c6 _fclose_r
20004948 g     O .bss	00000004 __malloc_max_sbrked_mem
0000ab64 g     F .text.itcm	00000070 pinMode
0000a71c g     F .text.itcm	00000036 String::getBytes(unsigned char*, unsigned int, unsigned int) const
00009c9c g     F .text.itcm	00000026 HardwareSerialIMXRT::available()
600016a4 g     F .text.code	00000054 TwoWire::setSDA(unsigned char)
20003608 g     O .data	00000140 Wire2
60017c00 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
000119c4 g       .ARM.exidx	00000000 __exidx_start
0000b50c  w    F .text.itcm	00000004 _isatty
20004754 g     O .bss	00000004 EventResponder::firstYield
00009c78  w    F .text.itcm	00000004 HardwareSerialIMXRT::operator bool()
0000d72c g     F .text.itcm	000003d8 _realloc_r
0000e150 g     F .text.itcm	00000048 __libc_init_array
0000ae78 g     F .text.itcm	0000034c dtostrf
00001164  w    F .text.itcm	0000000c TwoWire::available()
20002afc g     O .data	00000030 vtable for HardwareSerialIMXRT
00000b00 g     F .text.itcm	00000006 BNO055::getAccelerationY()
000046b0 g     F .text.itcm	00000140 SFE_UBLOX_GNSS::getNMEAWorkingNMEAPtr()
00011638 g     F .text.itcm	00000066 _fputwc_r
20000af0 g     O .data	00000028 __mprec_bigtens
0000b51c  w    F .text.itcm	00000004 abort
0000143c g     F .text.itcm	00000160 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
0000bed0  w    F .text.itcm	00000004 usb_serial_class::clear()
0000b4c0  w    F .text.itcm	00000034 _sbrk
60013840 g       *ABS*	00000000 _sdataload
0000ebc8 g     F .text.itcm	00000042 __mcmp
00001738 g     F .text.itcm	000000cc SHC_BME280::prefetchData()
0000180c g     F .text.itcm	00000006 SHC_BME280::getTemperature()
20003750 g     O .data	00000004 __brkval
20004bf9 g     O .bss	00000001 usb_cdc_line_rtsdtr
60001c28 g     F .text.code	00000000 _init
0000c24c g     F .text.itcm	00000002 usb_serial_reset
20004bf5 g     O .bss	00000001 state
0000a57c g     F .text.itcm	0000000e String::~String()
20002b2c g     O .data	00000010 vtable for M9N
0000a544 g     F .text.itcm	00000038 String::String(String const&)
0000a70c g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
60001da0 g     O .text.progmem	00000062 usb_config_descriptor_12
20002b5c g     O .data	00000024 vtable for TwoWire
20004c20 g       .bss	00000000 _ebss
00000ed4 g     F .text.itcm	00000012 Adafruit_I2CDevice::Adafruit_I2CDevice(unsigned char, TwoWire*)
600016f8 g     F .text.code	00000034 TwoWire::configSCLpin(unsigned char)
00004930 g     F .text.itcm	00000140 SFE_UBLOX_GNSS::getNMEACompleteNMEAPtr()
0000a68c g     F .text.itcm	0000007e String::append(char const*, unsigned int)
0000e7c0 g     F .text.itcm	00000040 __hi0bits
00001654 g     F .text.itcm	0000000c lpi2c3_isr()
00002e9c g     F .text.itcm	00000108 SFE_UBLOX_GNSS::SFE_UBLOX_GNSS()
20203080 g       .bss.dma	00000000 _heap_start
20004b28 g     O .bss	00000004 mostRecentSIV
20004918 g     O .bss	00000001 __lock___malloc_recursive_mutex
20003d58  w    O .data	00000001 BME280_Class::getData<unsigned short>(unsigned char, unsigned short&)::structSize
60001c7c  w    O .text.progmem	00000050 TwoWire::i2c4_hardware
0000a58c g     F .text.itcm	00000066 String::copy(char const*, unsigned int)
20004954 g     O .bss	00000138 __sf
20002a8c g     O .data	00000010 vtable for SHC_BME280
00000003 g       *ABS*	00000000 _itcm_block_count
200042e0 g     O .bss	00000020 endpoint0_transfer_data
20002a9c g     O .data	0000001c vtable for SFE_UBLOX_GNSS
0000ad6c g     F .text.itcm	00000004 operator delete(void*, unsigned int)
0000b240 g     F .text.itcm	000000f4 pwm_init
00004bbc g     F .text.itcm	0000015c SFE_UBLOX_GNSS::getNMEACallbackNMEAPtr()
00000a64  w    F .text.itcm	00000002 Adafruit_BNO055::~Adafruit_BNO055()
20004b4c g     O .bss	00000004 peakAltitude
0000a57c g     F .text.itcm	0000000e String::~String()
60018800 g       .text.csf	00000000 __text_csf_end
0000cd08 g     F .text.itcm	00000010 .hidden __math_oflow
000099cc g     F .text.itcm	000000d0 SFE_UBLOX_GNSS::setAutoPVTcallbackPtr(void (*)(UBX_NAV_PVT_data_t*), unsigned short)
000063e0 g     F .text.itcm	00001a6e SFE_UBLOX_GNSS::processUBXpacket(ubxPacket*)
6000190c g     F .text.code	0000005c usb_pll_start
0000ea18 g     F .text.itcm	000000c0 __pow5mult
00001660 g     F .text.itcm	0000000c lpi2c4_isr()
200042c0 g     O .bss	00000020 endpoint0_transfer_ack
20004bd4 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000be30 g     F .text.itcm	00000028 usb_transmit
00009c58 g     F .text.itcm	00000020 systick_isr
0000e1a4 g     F .text.itcm	00000002 __retarget_lock_release_recursive
00000068  w    F .text.itcm	00000018 SHC_BME280::~SHC_BME280()
20003318 g     O .data	00000010 Serial
00003dac g     F .text.itcm	000001b4 SFE_UBLOX_GNSS::logThisNMEA()
0000a360 g     F .text.itcm	0000000c IRQHandler_Serial1
00000b28 g     F .text.itcm	00000006 BNO055::getOrientationX()
00000af8 g     F .text.itcm	00000006 BNO055::getAccelerationX()
20000be0 g     O .data	00001048 .hidden __pow_log_data
0000a36c  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
600017ec  w    F .text.code	00000002 startup_early_hook
0000cd80 g     F .text.itcm	00000028 .hidden __math_check_oflow
0000c430 g     F .text.itcm	00000044 usb_serial_peekchar
20004ae8 g     O .bss	00000010 bno
0000dd20 g     F .text.itcm	0000000c __sfp_lock_acquire
0000f150 g     F .text.itcm	00000000 memchr
0000a754 g     F .text.itcm	000002f0 set_arm_clock
20004bc0 g     O .bss	00000004 systick_cycle_count
20003d38 g     O .data	00000016 usb_string_serial_number_default
0000e484 g     F .text.itcm	0000020c _free_r
00002e54 g     F .text.itcm	00000002 SFE_UBLOX_GNSS::processRTCM_v(unsigned char)
00000e58 g     F .text.itcm	0000005c Adafruit_BNO055::getEvent(sensors_event_t*)
0000e06c g     F .text.itcm	0000000c __locale_mb_cur_max
00010108 g     F .text.itcm	00000016 _wcsrtombs_r
00009df0 g     F .text.itcm	00000068 HardwareSerialIMXRT::end()
0000a210 g     F .text.itcm	00000004 HardwareSerialIMXRT::write(unsigned char)
20004784 g     O .bss	00000190 __atexit0
0000bee0  w    F .text.itcm	00000004 usb_serial_class::flush()
00003cd4 g     F .text.itcm	000000d8 SFE_UBLOX_GNSS::getMaxPayloadSize(unsigned char, unsigned char)
20003ccc g     O .data	00000004 __malloc_sbrk_base
0000bed8  w    F .text.itcm	00000004 usb_serial_class::read()
0000b510  w    F .text.itcm	00000006 _lseek
0000b518  w    F .text.itcm	00000004 __cxa_pure_virtual
0000ead8 g     F .text.itcm	000000f0 __lshift
0000be00 g     F .text.itcm	00000030 usb_prepare_transfer
00009cc4 g     F .text.itcm	0000007a HardwareSerialIMXRT::peek()
00000bc0 g     F .text.itcm	00000030 Adafruit_BNO055::Adafruit_BNO055(long, unsigned char, TwoWire*)
0000b334 g     F .text.itcm	0000018c unused_interrupt_vector
20004bd8 g     O .bss	00000004 usb_timer0_callback
60001968 g     F .text.code	00000130 tempmon_init
000027c8 g     F .text.itcm	00000338 BME280_Class::getCalibration()
0000e35c g     F .text.itcm	00000088 __register_exitproc
00001814 g     F .text.itcm	00000006 SHC_BME280::getAltitude()
0000c48c g     F .text.itcm	00000070 usb_serial_flush_input
0000e8bc g     F .text.itcm	0000015c __multiply
0000c740 g     F .text.itcm	0000057c pow
0000c51c g     F .text.itcm	0000002c usb_serial_putchar
00000024 g       *ABS*	00000000 _teensy_model_identifier
0000e008 g     F .text.itcm	00000064 strncpy
00009d40 g     F .text.itcm	00000092 HardwareSerialIMXRT::read()
20004920 g     O .bss	00000028 __malloc_current_mallinfo
00008314 g     F .text.itcm	00000834 SFE_UBLOX_GNSS::process(unsigned char, ubxPacket*, unsigned char, unsigned char)
20002a3c g     O .data	00000050 SPIClass::spiclass_lpspi4_hardware
0000ed60 g     F .text.itcm	000000d4 __d2b
60001b80 g     F .text.code	00000054 _reboot_Teensyduino_
00000b88 g     F .text.itcm	00000038 Adafruit_BNO055::getSensor(sensor_t*)
600017f0 g     F .text.code	00000002 startup_default_middle_hook
0000d714 g     F .text.itcm	00000018 realloc
00000bc0 g     F .text.itcm	00000030 Adafruit_BNO055::Adafruit_BNO055(long, unsigned char, TwoWire*)
0000b708 g     F .text.itcm	00000630 usb_isr
0000dba0 g     F .text.itcm	0000000c __cxa_atexit
0000e078 g     F .text.itcm	00000024 _close_r
00004d18 g     F .text.itcm	00000100 SFE_UBLOX_GNSS::getNMEAMaxLength()
200032c8 g     O .data	00000050 SPI
0000de0c g     F .text.itcm	00000060 memcmp
20002ad4  w    O .data	00000028 vtable for usb_serial_class
00004224  w    F .text.itcm	0000002c SFE_UBLOX_GNSS::processNMEA(char)
0000a508 g     F .text.itcm	0000003a String::String(char const*)
000096b4 g     F .text.itcm	0000006a SFE_UBLOX_GNSS::setDynamicModel(dynModel, unsigned short)
0000e19c g     F .text.itcm	00000002 __retarget_lock_close_recursive
20004b98 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
20003d56  w    O .data	00000001 BME280_Class::getData<unsigned char>(unsigned char, unsigned char&)::structSize
000114c0 g     F .text.itcm	000000cc __swsetup_r
20002ab8 g     O .data	0000001c vtable for Adafruit_BNO055
0000d14c  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
00004ff4 g     F .text.itcm	00000046 SFE_UBLOX_GNSS::calcChecksum(ubxPacket*)
00003f60 g     F .text.itcm	00000110 SFE_UBLOX_GNSS::isNMEAHeaderValid()
0000181c g     F .text.itcm	00000006 SHC_BME280::getHumidity()
00003804 g     F .text.itcm	00000094 SFE_UBLOX_GNSS::setPacketCfgPayloadSize(unsigned int)
200038c4 g     O .data	00000408 __malloc_av_
20004780 g     O .bss	00000004 __atexit
000047f0 g     F .text.itcm	00000140 SFE_UBLOX_GNSS::getNMEACompleteLengthPtr()
0000dd80 g     F .text.itcm	00000022 __sread
0000c5b0 g     F .text.itcm	00000094 usb_serial_flush_output
0000d6fc g     F .text.itcm	0000000c __malloc_lock
00009dd4 g     F .text.itcm	0000001a HardwareSerialIMXRT::flush()
20004000 g     O .data	000002c0 _VectorsRam
0000f0ec g     F .text.itcm	00000054 _fflush_r
0000f230 g     F .text.itcm	00000078 _calloc_r
20004b0c g     O .bss	00000004 getTimePtr
0000db04 g     F .text.itcm	0000009c __utoa
00009720 g     F .text.itcm	00000060 SFE_UBLOX_GNSS::getPortSettingsInternal(unsigned char, unsigned short)
20004bfd g     O .bss	00000001 yield_active_check_flags
0000e1a0 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
20004bfb g     O .bss	00000001 usb_high_speed
20002b3c g     O .data	00000010 vtable for BNO055
20003cf8 g     O .data	00000004 ii
0000df64 g     F .text.itcm	000000a4 memset
0000ac1c g     F .text.itcm	00000010 main
2000494c g     O .bss	00000004 __malloc_max_total_mem
00002e3c g     F .text.itcm	00000006 M9N::getSecond()
0000e198 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
00008f64 g     F .text.itcm	00000218 SFE_UBLOX_GNSS::waitForNoACKResponse(ubxPacket*, unsigned char, unsigned char, unsigned short)
00009af8 g     F .text.itcm	00000094 now()
20004b10 g     O .bss	00000004 lastAltitude
0000de04 g     F .text.itcm	00000008 __sclose
0000ad68 g     F .text.itcm	00000004 operator delete[](void*)
0000be78 g     F .text.itcm	00000058 usb_init_serialnumber
60001c7c g       .text.code	00000000 __init_array_end
0000f3d0 g     F .text.itcm	00000cec _dtoa_r
0000d19c g     F .text.itcm	00000560 _malloc_r
0000ee34 g     F .text.itcm	0000001a __ascii_wctomb
00000ed4 g     F .text.itcm	00000012 Adafruit_I2CDevice::Adafruit_I2CDevice(unsigned char, TwoWire*)
20002b80  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
00009b8c g     F .text.itcm	00000084 EventResponder::triggerEventNotImmediate()
00000b40  w    F .text.itcm	0000000e Adafruit_BNO055::~Adafruit_BNO055()
000006b0 g     F .text.itcm	000000a0 velocity()
00000068  w    F .text.itcm	00000018 SHC_BME280::~SHC_BME280()
00004070 g     F .text.itcm	000001b4 SFE_UBLOX_GNSS::processThisNMEA()
00001824 g     F .text.itcm	0000000e BME280_Class::BME280_Class()
0000166c g     F .text.itcm	00000078 TwoWire::setClock(unsigned long)
0000e3e4 g     F .text.itcm	000000a0 _malloc_trim_r
000116a0 g     F .text.itcm	00000106 _wcsnrtombs_l
60001d9c g     O .text.progmem	00000004 string0
0000c548 g     F .text.itcm	00000018 usb_serial_write
600017f4  w    F .text.code	00000002 startup_late_hook
0000cd68 g     F .text.itcm	00000012 .hidden __math_check_uflow
00002e34 g     F .text.itcm	00000006 M9N::getAltitude()
0000bedc  w    F .text.itcm	00000004 usb_serial_class::available()
0000add4 g     F .text.itcm	0000007a ulltoa
00008df0 g     F .text.itcm	00000174 SFE_UBLOX_GNSS::checkUbloxSpi(ubxPacket*, unsigned char, unsigned char)
20000000 g     O .data	00000280 endpoint_queue_head
20004b30 g     O .bss	00000004 mostRecentYear
60001d6c  w    O .text.progmem	00000016 usb_string_product_name
00000f20 g     F .text.itcm	00000068 Adafruit_I2CDevice::write(unsigned char const*, unsigned int, bool, unsigned char const*, unsigned int)
200046b8 g     O .bss	00000008 mostRecentLatitude
0000aa44 g     F .text.itcm	000000a8 delay
000119c0 g     F .fini	00000000 _fini
0000118c g     F .text.itcm	0000002a TwoWire::write(unsigned char)
60001020 g     O .text.headers	0000000c BootData
00000b38 g     F .text.itcm	00000006 BNO055::getOrientationZ()
0000a490 g     F .text.itcm	00000016 Print::print(long)
0000b520 g     F .text.itcm	00000004 Panic_Temp_isr
20003d5a  w    O .data	00000001 BME280_Class::putData<int>(unsigned char, int const&)::structSize
000117a8 g     F .text.itcm	00000024 _wcsnrtombs_r
0000e118 g     F .text.itcm	0000002c _write_r
00002b78 g     F .text.itcm	0000000c BME280_Class::begin()
0000a508 g     F .text.itcm	0000003a String::String(char const*)
20003ce0 g     O .data	00000004 _impure_ptr
00005690 g     F .text.itcm	00000ab4 SFE_UBLOX_GNSS::checkCallbacks()
0000efbc g     F .text.itcm	00000130 __sflush_r
20003388 g     O .data	00000140 Wire
0000dd38 g     F .text.itcm	00000046 _fwalk_sglue
000016f4 g     F .text.itcm	00000044 SHC_BME280::init()
00001824 g     F .text.itcm	0000000e BME280_Class::BME280_Class()
60001c70 g       .text.code	00000000 __preinit_array_end
200046c0 g     O .bss	00000008 mostRecentLongitude
00004388 g     F .text.itcm	000001e8 SFE_UBLOX_GNSS::doesThisNMEAHaveCallback()
0000e690 g     F .text.itcm	0000002a __ascii_mbtowc
0000b6dc g     F .text.itcm	0000002c usb_stop_sof_interrupts
00001170  w    F .text.itcm	00000018 TwoWire::peek()
00001188  w    F .text.itcm	00000002 TwoWire::flush()
0000098c g     F .text.itcm	000000c0 setup
20003108 g     O .data	00000084 usb_descriptor_list
000097e8 g     F .text.itcm	000000e8 SFE_UBLOX_GNSS::begin(TwoWire&, unsigned char, unsigned short, bool)
00002e2c g     F .text.itcm	00000006 M9N::getLongitude()
20003d50 g     O .data	00000004 velocityTime
00002b00 g     F .text.itcm	00000078 BME280_Class::begin(unsigned long)
00004f58 g     F .text.itcm	00000040 SFE_UBLOX_GNSS::processRTCMframe_v(unsigned char, unsigned short*)
0000a620 g     F .text.itcm	00000032 String::String(long long, unsigned char)
000061e8 g     F .text.itcm	00000082 SFE_UBLOX_GNSS::writeToFileBuffer(unsigned char*, unsigned short)
20068000 g       .text.csf	00000000 _estack
0000c560 g     F .text.itcm	00000050 usb_serial_write_buffer_free
00001834 g     F .text.itcm	00000002 BME280_Class::~BME280_Class()
6000172c g     F .text.code	00000058 TwoWire::setSCL(unsigned char)
20003cd4 g     O .data	0000000c __sglue
0000c250 g     F .text.itcm	00000100 usb_serial_configure
000011b8 g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
0000a4c4  w    F .text.itcm	0000001c _write
200042c0 g       .data	00000000 _edata
00009968 g     F .text.itcm	00000064 SFE_UBLOX_GNSS::setI2COutput(unsigned char, unsigned short)
000098d0 g     F .text.itcm	00000098 SFE_UBLOX_GNSS::setNavigationFrequency(unsigned char, unsigned short)
0000917c g     F .text.itcm	000003ac SFE_UBLOX_GNSS::waitForACKResponse(ubxPacket*, unsigned char, unsigned char, unsigned short)
0001158c g     F .text.itcm	000000aa __fputwc
0000bee4  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
00001648 g     F .text.itcm	0000000c lpi2c1_isr()
000016e4 g     F .text.itcm	00000010 Timer::Timer(unsigned long)
0000a0f4 g     F .text.itcm	00000040 nvic_execution_priority()
0000ad70 g     F .text.itcm	00000062 ultoa
00001e9c g     F .text.itcm	00000500 BME280_Class::readSensors()
000051e4 g     F .text.itcm	0000008c SFE_UBLOX_GNSS::sendSerialCommand(ubxPacket*)
60001784 g     F .text.code	00000068 TwoWire::begin()
00000b84  w    F .text.itcm	00000002 Adafruit_Sensor::enableAutoRange(bool)
0000dda4 g     F .text.itcm	0000003e __swrite
0000ad60 g     F .text.itcm	00000004 operator new(unsigned int)
00009c10 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
20003cd0 g     O .data	00000004 __malloc_trim_threshold
0000bed4  w    F .text.itcm	00000004 usb_serial_class::peek()
0000dbac g     F .text.itcm	0000000a fcvtf
00010120 g     F .text.itcm	00000028 fiprintf
000101c0 g     F .text.itcm	00000f8c _vfiprintf_r
00001050  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
0000ec0c g     F .text.itcm	00000154 __mdiff
00004f44  w    F .text.itcm	00000014 SFE_UBLOX_GNSS::processRTCM(unsigned char)
0000ccf8 g     F .text.itcm	00000010 .hidden __math_uflow
20004a90 g     O .bss	00000058 bmeup
00009a9c g     F .text.itcm	0000005c SFE_UBLOX_GNSS::checkUblox(unsigned char, unsigned char)
20004b1c g     O .bss	00000004 mostRecentHour
00009780 g     F .text.itcm	00000066 SFE_UBLOX_GNSS::isConnected(unsigned short)
200031a0 g     O .data	00000120 _impure_data
00000a4c  w    F .text.itcm	00000018 M9N::~M9N()
0000dd2c g     F .text.itcm	0000000c __sfp_lock_release
20002c68 g     O .data	00000101 _ctype_
0000b4f4  w    F .text.itcm	00000004 _read
60001c70 g       .text.code	00000000 __init_array_start
0000d14c  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
00000a80 g     F .text.itcm	00000078 BNO055::prefetchData()
200032c0 g     O .data	00000004 F_BUS_ACTUAL
00001834 g     F .text.itcm	00000002 BME280_Class::~BME280_Class()
00000b20 g     F .text.itcm	00000006 BNO055::getGyroZ()
000117cc g     F .text.itcm	000000d8 __smakebuf_r
20004b18 g     O .bss	00000004 mostRecentDay
00000000 g       .text.itcm	00000000 _stext
00001bcc g     F .text.itcm	0000023c BME280_Class::setOversampling(unsigned char, unsigned char)
0000e280 g     F .text.itcm	000000dc strlen
60001d6c g     O .text.progmem	00000016 usb_string_product_name_default
00000a4c  w    F .text.itcm	00000018 M9N::~M9N()
0000503c g     F .text.itcm	000001a6 SFE_UBLOX_GNSS::sendI2cCommand(ubxPacket*, unsigned short)
00002c78 g     F .text.itcm	000000a8 pvtCallback(UBX_NAV_PVT_data_t*)
00009674 g     F .text.itcm	00000040 SFE_UBLOX_GNSS::saveConfiguration(unsigned short)
00009c7c g     F .text.itcm	00000020 HardwareSerialIMXRT::availableForWrite()
00001e54 g     F .text.itcm	00000048 BME280_Class::mode(unsigned char)
600017f0  w    F .text.code	00000002 startup_middle_hook
0000a444 g     F .text.itcm	0000004c Print::print(String const&)
20004b2c g     O .bss	00000004 mostRecentSecond
20004b20 g     O .bss	00000004 mostRecentMinute
600017fc g     F .text.code	00000110 configure_cache
00000bf0 g     F .text.itcm	0000016e Adafruit_BNO055::begin(adafruit_bno055_opmode_t)
00002fa4 g     F .text.itcm	00000808 SFE_UBLOX_GNSS::end()
00000b10 g     F .text.itcm	00000006 BNO055::getGyroX()
60001c70 g       .text.code	00000000 __preinit_array_start
0000be58 g     F .text.itcm	0000001c usb_receive
0000e800 g     F .text.itcm	00000060 __lo0bits
00018800 g       *ABS*	00000000 _flashimagelen
0000cdb4 g     F .text.itcm	00000000 .hidden __aeabi_ldivmod
000037ec g     F .text.itcm	00000016 SFE_UBLOX_GNSS::~SFE_UBLOX_GNSS()
0000cda8 g     F .text.itcm	0000000a __aeabi_atexit
00002e44 g     F .text.itcm	0000000e SFE_UBLOX_GNSS::processNMEA_v(char)
0000c71c g     F .text.itcm	00000024 rtc_get
00009c54 g     F .text.itcm	00000004 pendablesrvreq_isr
00001160  w    F .text.itcm	00000004 Print::availableForWrite()
20003758 g     O .data	0000016c __global_locale
00002d20 g     F .text.itcm	0000006c M9N::init()
00002d8c g     F .text.itcm	00000098 M9N::prefetchData()
0000c350 g     F .text.itcm	000000e0 usb_serial_read
2000491c g     O .bss	00000001 __lock___sfp_recursive_mutex
0000a4e0 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
00000b30 g     F .text.itcm	00000006 BNO055::getOrientationY()
20004b24 g     O .bss	00000004 mostRecentMonth
0000bd9c g     F .text.itcm	00000064 usb_config_tx
0000b4f8  w    F .text.itcm	00000006 _close
0000d18c g     F .text.itcm	00000010 free
0000e71c g     F .text.itcm	000000a4 __multadd
0000e708 g     F .text.itcm	00000012 _Bfree
20003d38  w    O .data	00000016 usb_string_serial_number
00009528 g     F .text.itcm	0000014c SFE_UBLOX_GNSS::sendCommand(ubxPacket*, unsigned short, bool)


